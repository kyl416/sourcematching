{"version":2,
    "select_struct_list":[
		{"teststruct":"struct-data_def_full_extended",
			"description":"The file \"%s\" is a JSON data_def_full_extended\\n",
			"type":"dict", 
			"keyvalues":[
				{"key":"data", "present":true},
				{"key":"values", "present":true},
				{"key":"url", "present":true}]},
		{"teststruct":"struct-data_def_with_url_extension",
			"description":"The file \"%s\" is a JSON data_def_with_url_extension\\n",
			"type":"dict", 
			"keyvalues":[
				{"key":"data", "present":true},
				{"key":"url", "present":true}]},
		{"teststruct":"struct-data_def_with_link_extension",
			"description":"The file \"%s\" is a JSON data_def_with_link_extension\\n",
			"type":"dict", 
			"keyvalues":[
				{"key":"data", "present":true},
				{"key":"values", "present":true}]},
		{"teststruct":"struct-data_def",
			"description":"The file \"%s\" is a JSON data_def\\n",
			"type":"dict", 
			"keyvalues":[
				{"key":"data", "present":true}]}],
	"struct-data_def_full_extended":{
		"include":["struct-data_def","struct-link_extension","struct-url_extension"]},
	"struct-data_def_with_url_extension":{
		"include":["struct-data_def","struct-url_extension"]},
	"struct-data_def_with_link_extension":{
		"include":["struct-data_def","struct-link_extension"]},
	"struct-data_def_data":{
		"type":"dict",
		"report":{
			"data_def_data":"either 'iter' or 'key-path' with 'values' should be present"},
		"either":{
			"data_def_data":[
				{"required":{
					"iter":{
						"types":[
							{"type":"list"}, 
							{"type":"dict", 
								"length":2,
								"required":{
									"key-path":{
										"types":["struct-key_def"]},
									"values":{
										"types":[
											"list",
											"struct-value_def"]}}}]}},
				"ignore_keys":["key-path","values"]},
				{"required":{
					"key-path":{
						"types":["struct-key_def"]},
					"values":{
						"types":[
							"list",
							"struct-value_def"]}},
				"forbidden_keys":["iter"]}]},
		"conditional":{
			"sort":{
				"reference_key" :"data-format",
				"regex" :"json",
				"true":3,
				"false":-1,
				"types":[
					{"type":"list"},
					{"type":"dict",
						"length":2,
						"required":{
							"path":{
								"types":[
									"list",
									"string"]},
							"childkeys":{
								"types":[
									"list",
									"string"]}}}]}},
		"optional":{
			"init-path":{
				"types":["struct-path_def"]}}},
	"struct-data_def":{
		"type":"dict",
		"base-type":"data_def",
        "lookup_lists":{
			"lst-member_off":{"keyword": ["value-filters"],"values": "keys"},
			"lst-time_type":{"list":[24,12]},
			"lst-path_value":{"list":["all","parent","root"]},
			"lst-calc_value":{"list":["plus","min"]},
			"lst-type_value":{"list":["timestamp","datetimestring","time",
				"timedelta","date","datestamp","relative-weekday","string",
				"int","float","boolean","lower-ascii","list","str-list"]},
			"lst-select_value":[
				{"list":["index","presence"],"append":false},
				{"list":["tag","text","tail","inclusive text"],
					"append":true,
					"reference_key" :"data-format",
					"regex" :"html"},
				{"list":["key","value"],
					"append":true,
					"reference_key" :"data-format",
					"regex" :"json"}]},
		"reference_values":{
			"default-datetimestring":{"keyword":["datetimestring"], "type":"string", "default":"%Y-%m-%d %H:%M:%S"},
			"default-date-splitter":{"keyword":["date-splitter"], "type":"string", "default":"-"},
			"default-date-sequence":{"keyword":["date-sequence"], "type":"list", "default":["y","m","d"]},
			"default-time-type":{"keyword":["time-type"], "type":"list", "default":[24]},
			"default-time-splitter":{"keyword":["time-splitter"], "type":"string", "default":":"},
			"default-str-list-splitter":{"keyword":["str-list-splitter"], "type":"string", "default":"\\|"},
			"data-format":{"keyword":["data-format"], "type":"string"}},
		"required":{
			"data":{
				"types":["struct-data_def_data"]}},
		"optional":{
			"datetimestring":{
				"types":["string"],
				"default":"%Y-%m-%d %H:%M:%S"},
			"date-sequence":{
				"types":[
					{"type":"list"},
					{"type":"string"}],
				"default": ["y","m","d"]},
			"date-splitter":{
				"types":["string"],
				"default":"-"},
			"month-names":{
				"types":[
					{"type":"list","length":13},
					{"type":["string","integer"]}]},
			"relative-weekdays":{
				"types":[
					{"type":"dict"},
					{"type":"integer"}]},
			"str-list-splitter":{
				"types":["string"],
				"default":"\\|"},
			"timezone":{
				"types":["tz-string"],
				"default":"UTC"},
			"time-splitter":{
				"types":["string"],
				"default":":"},
			"time-type":{
				"types":[
					{"type":"list","items":["lst-time_type","string","string"]}],
				"default":[24]},
			"value-filters":{
				"types":[
					{"type":"dict"},
					{"type":"list"}]},
			"weekdays":{
				"types":[
					{"type":"list","length":7},
					{"type":["string","integer"]}]}},
		"ignore_keys":["data-format"]},
	"struct-url_extension":{
		"type":"dict",
        "lookup_lists":{
			"lst-url_funcid":{"list":[0,4,11,14],"append":true},
			"lst-url-date-type":{"list":[0,1,2]}},
		"reference_values":{
			"url-date-type":{"keyword":["url-date-type"], "type":"integer","default":0}},
		"required":{
			"url":{
				"types":[
					["string","list"],
					{"type":["string","lst-url_funcid","list"],"items":[[["string","lst-url_funcid"]],"string"]}]}},
		"optional":{
			"data-format":{
				"types":["string"],
				"default":""},
			"date-range-splitter":{
				"types":["string"],
				"default":"~"},
			"default-item-count":{
				"types":["integer"],
				"default":0},
			"encoding":{
				"types":[["string","none"]],
				"default":""},
			"item-range-splitter":{
				"types":["string"],
				"default":"-"},
			"url-data":{
				"types":[
					"dict",
					{"type":["string","url_funcid","list"],"items":[[["string","url_funcid"]],"string"]}]},
			"url-date-type":{
				"types":["lst-url-date-type"],
				"default":0},
			"url-type":{
				"types":["integer"],
				"default":0}},
		"conditional":{
			"autoclose-tags":{
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":[
					{"type":"list"},
					{"type":"string"}]},
			"enclose-with-html-tag":{
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":["boolean"],
				"default":false},
			"text_replace":{
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":[
					{"type":"list"}, 
					{"type":"list", "length":2}, 
					{"type":"string"}]},
			"unquote_html":{
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":["list","string"]},
			"url-date-format":{
				"reference_key" :"url-date-type",
				"value" :[0],
				"true":3,
				"false":-1,
				"types":["string"],
				"default":null},
			"url-date-multiplier":{
				"reference_key" :"url-date-type",
				"value" :[1],
				"true":3,
				"false":-1,
				"types":["integer"],
				"default":1},
			"url-weekdays":{
				"reference_key" :"url-date-type",
				"value" :[2],
				"true":3,
				"false":-1,
				"types":[
					{"type":"list","length":7},
					{"type":["string","integer"]}]}},
		"report":{
			"url_header":"use either 'accept-header' or 'url-header'"},
		"either":{
			"url_header":[
				{"optional":{
					"accept-header":{
						"types":[["string","none"]],
						"default":""}},
				"forbidden_keys":["url-header"]},
				{"optional":{
					"url-header":{
						"types":[
							"dict",
							"string"]}},
				"forbidden_keys":["accept-header"]}]}},
	"struct-link_extension":{
		"type":"dict",
        "lookup_lists":{
			"lst-link_funcid":{"list":[0,2,3,4,5,6,7,8,9,10,11],"append":true},
			"lst-link_types":{"list":["string","lower","upper","capitalize","int","float","bool"]}},
		"required":{
			"values":{
				"types":[
					{"type":"dict"},
					{"type":"struct-link_def"}]}},
		"optional":{
			"empty-values":{
				"types":[
					{"type":"list"},
					{"type":["string","none"]}],
				"default":[null,""]}}},
	"struct-path_def":{
		"type":"list",
		"base-type":"path_def",
		"types":[
			{"type":"list"},
			{"type":"struct-node_def"}]},
	"struct-key_def":{
		"type":"list",
		"base-type":"key_def",
		"types":[
			{"type":"list",
				"reverse_items":[[["struct-end_node_def","struct-combined_end_node_def"]]],
				"other_items":"struct-node_def"}]},
	"struct-value_def":{
		"type":"list",
		"base-type":"value_def",
		"types":[
			{"type":"list",
				"reverse_items":[[["struct-end_node_def","struct-combined_end_node_def"]]],
				"other_items":"struct-node_def"}]},
	"struct-node_def":{
		"include":"struct-node_value_def",
		"conditional-type":{
			"key":"link",
			"name":"link_value_def"},
		"report":{
			"node_selection":[
				"either 'path', 'tag'/'key', 'tags'/'keys' or 'index' must be present,",
				"also an intermediate single 'link' or 'name' is allowed",
				"but if part of an init_path or a key_path 'name' is forbidden",
				"and will result in no data!"]},
		"either":{
			"node_selection":[
				{"required":{
					"path":{
						"types":["lst-path_value"]}},
				"unused_keys":["index","tag", "tags","key", "keys"]},
				{"conditional":{
					"tag":{
						"reference_key" :"data-format",
						"regex" :"html",
						"true":1,
						"false":-1,
						"types":[["string","struct-value_link"]]},
					"key":{
						"reference_key" :"data-format",
						"regex" :"json",
						"true":1,
						"false":-1,
						"types":[["string","integer","struct-integer_link"]]},
					"index":{
						"reference_key" :"data-format",
						"regex" :"html",
						"true":3,
						"false":-1,
						"types":[["integer","struct-index_link"]]}},
				"unused_keys":["keys","tags"],
				"forbidden_keys":["path"]},
				{"conditional":{
					"tags":{
						"reference_key" :"data-format",
						"regex" :"html",
						"true":1,
						"false":-1,
						"types":[
							"list",
							["string","struct-value_link"]]},
					"keys":{
						"reference_key" :"data-format",
						"regex" :"json",
						"true":1,
						"false":-1,
						"types":[
							"list",
							["string","integer","struct-integer_link"]]}},
				"optional":{
					"index":{
						"types":[["integer","struct-index_link"]]}},
				"forbidden_keys":["path","tag","key"]},
				{"required":{
					"index":{
						"types":[["integer","struct-index_link"]]}},
				"forbidden_keys":["path","tag", "tags","key", "keys"]},
				{"required":{
					"link":{
						"types":["integer"]}},
				"forbidden_keys":["path","tag", "tags","key", "keys","index"]}]},
		"conditional":{
			"attrs":{
				"presence_key" :["path","tag","tags","index"],
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":[["struct-attrs_dict","list"], "struct-attrs_dict"]},
			"notattrs":{
				"presence_key" :["path","tag","tags","index"],
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":[["struct-notattrs_dict","list"], "struct-notattrs_dict"]},
			"childkeys":{
				"presence_key" :["path","key","keys","index"],
				"reference_key" :"data-format",
				"regex" :"json",
				"true":3,
				"false":-1,
				"types":[["struct-keys_dict","list"],"struct-keys_dict"]},
			"notchildkeys":{
				"presence_key" :["path","key","keys","index"],
				"reference_key" :"data-format",
				"regex" :"json",
				"true":3,
				"false":-1,
				"types":[["struct-notkeys_dict","list"],"struct-notkeys_dict"]},
			"text":{
				"presence_key" :["path","tag","tags","index"],
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":[["string","struct-value_link"]]},
			"tail":{
				"presence_key" :["path","tag","tags","index"],
				"reference_key" :"data-format",
				"regex" :"html",
				"true":3,
				"false":-1,
				"types":[["string","struct-value_link"]]},
			"name":{
				"base-type" :["path_def","key_def"],
				"true":-2,
				"false":3,
				"types":["struct-node_name_def"]}},
		"optional":{
			"link":{
				"types":["integer"]}}},
	"struct-node_value_def":{
		"type":"dict",
		"reference_values":{
			"value_select":{"keyword":["select"], "type":"string"},
			"value_type":{"keyword":["type"], "type":"string"}},
		"report":{
			"node_value_selection":[
				"Use either 'value' or 'select' to select a return value",
				"for HTML also 'attr' is possible. If none is specified it will default",
				"on HTML to 'select': 'text' and on JSON to 'select': 'value'."],
			"inclusive_text":[
				"If a 'select': 'inclusive text' statement is present",
				"either 'include' or 'exclude' can be used to include or exclude",
				"a list of child tags."]},
		"either":{
			"node_value_selection":[
				{"conditional":{
					"value":{
						"base-type":["node_name_def","node_value_def","link_value_def"],
						"true":1,
						"false":-1,
						"types":[""]}},
				"unused_keys":["attr","select"]},
				{"conditional_either":
					{"reference_key":"data-format",
					"regex":"html",
					"text":"is for HTML data_defs"},
				"conditional":{
					"attr":{
						"base-type":["node_name_def","node_value_def","link_value_def"],
						"true":1,
						"false":-1,
						"types":["string"]}},
				"unused_keys":["select"],
				"forbidden_keys":["value"]},
				{"conditional_either":
					{"reference_key":"data-format",
					"regex" :"html",
					"text":"is for HTML data_defs"},
				"conditional":{
					"select":{
						"base-type":["node_name_def","node_value_def","link_value_def"],
						"true":2,
						"false":-1,
						"types":["lst-select_value"],
						"default":"text"},
					"depth":{
						"reference_key" :"value_select",
						"value" :["inclusive text"],
						"true":3,
						"false":-1,
						"types":["integer"],
						"default":1}},
				"forbidden_keys":["value","attr"]},
				{"conditional_either":
					{"reference_key":"data-format",
					"regex" :"json",
					"text":"is for JSON data_defs"},
				"conditional":{
					"select":{
						"base_type":["node_name_def","node_value_def","link_value_def"],
						"true":2,
						"false":-1,
						"types":["lst-select_value"],
						"default":"value"}},
				"forbidden_keys":["value","attr"]}],
			"inclusive_text":[
				{"conditional_either":
					{"reference_key":"value_select",
					"value" :["inclusive text"],
					"text":"is for selecting inclusive text"},
				"optional":{
					"include":{
						"types":["list","string"]}},
				"forbidden_keys":["exclude"]},
				{"conditional_either":
					{"reference_key":"value_select",
					"value" :["inclusive text"],
					"text":"is for selecting inclusive text"},
				"optional":{
					"exclude":{
						"types":["list","string"]}},
				"forbidden_keys":["include"]},
				{"forbidden_keys":["include","exclude"]}]},
		"optional":{
			"lower":{
				"types":[""]},
			"upper":{
				"types":[""]},
			"capitalize":{
				"types":[""]},
			"ascii-replace":{
				"types":[
					{"type":"list"},
					{"type":"string"}]},
			"lstrip":{
				"types":["string"]},
			"rstrip":{
				"types":["string"]},
			"sub":{
				"types":["list","string"]},
			"split":{
				"types":[
					["struct-split_item","list"],
					"struct-split_item"]},
			"multiplier":{
				"types":["integer"]},
			"divider":{
				"types":["integer"]},
			"replace":{
				"types":["dict"]},
			"default":{
				"types":[""]},
			"first":{
				"types":[""]},
			"last":{
				"types":[""]},
			"type":{
				"types":["lst-type_value"]},
			"member-off":{
				"types":["lst-member_off"]}},
		"conditional":{
			"datetimestring":{
				"reference_key" :"value_type",
				"value" :["datetimestring"],
				"true":2,
				"false":-1,
				"types":["string"],
				"reference-default":"default-datetimestring"},
			"date-splitter":{
				"reference_key" :"value_type",
				"value" :["date"],
				"true":2,
				"false":-1,
				"types":["string"],
				"reference-default":"default-date-splitter"},
			"date-sequence":{
				"reference_key" :"value_type",
				"value" :["date"],
				"true":2,
				"false":-1,
				"types":[
					{"type":"list"},
					{"type":"string"}],
				"reference-default": "default-date-sequence"},
			"time-type":{
				"reference_key" :"value_type",
				"value" :["time"],
				"true":2,
				"false":-1,
				"types":[
					{"type":"list","items":["lst-time_type","string","string"]}],
				"reference-default":"default-time-type"},
			"time-splitter":{
				"reference_key" :"value_type",
				"value" :["time"],
				"true":2,
				"false":-1,
				"types":["string"],
				"reference-default":"default-time-splitter"},
			"str-list-splitter":{
				"reference_key" :"value_type",
				"value" :["str-list"],
				"true":2,
				"false":-1,
				"types":["string"],
				"reference-default":"default-str-list-splitter"}}},
	"struct-node_name_def":{
		"include":"struct-node_value_def",
		"base-type":"node_name_def"},
	"struct-end_node_def":{
		"include":"struct-node_value_def",
		"base-type":"node_value_def"},
	"struct-combined_end_node_def":{
		"include":"struct-node_def",
		"base-type":"node_value_def"},
	"struct-attr_list":{
		"type":"list",
		"types":[
			{"type":"list"},
			["none","string","struct-value_link"]]},
	"struct-attr_not_dict":{
		"type":"dict",
		"types":[
			{"type":"dict",
			"length":1,
			"required":{
				"not":{
					"types":[["string","struct-value_link","struct-attr_list"]]}}}]},
	"struct-attrs_dict":{
		"type":"dict",
		"types":[
			{"type":"dict"},
			["none","string","struct-value_link","struct-attr_list","struct-attr_not_dict"]]},
	"struct-notattrs_dict":{
		"type":"dict",
		"types":[
			{"type":"dict"},
			["none","string","struct-value_link","struct-attr_list"]]},
	"struct-key_list":{
		"type":"list",
		"types":[
			{"type":"list"},
			["none","string","integer","struct-integer_link"]]},
	"struct-key_not_dict":{
		"type":"dict",
		"types":[
			{"type":"dict",
			"length":1,
			"required":{
				"not":{
					"types":[["string","integer","struct-integer_link","struct-key_list"]]}}}]},
	"struct-keys_dict":{
		"type":"dict",
		"types":[
			{"type":"dict"},
			["none","string","integer","struct-integer_link","struct-key_list","struct-key_not_dict"]]},
	"struct-notkeys_dict":{
		"type":"dict",
		"types":[
			{"type":"dict"},
			["none","string","integer","struct-integer_link","struct-key_list"]]},
	"struct-split_item":{
		"type":"list",
        "lookup_lists":{
			"lst-list-all":{"list": ["list-all"]}},
		"types":[
			{"type":"list",
				"items":["string"],
				"other_items":[["integer","lst-list-all"]]}]},
	"struct-value_link":{
		"type":"dict",
		"required":{
			"link":{
				"types":["integer"]}}},
	"struct-integer_link":{
		"include":"struct-value_link",
		"optional":{
			"calc":{
				"types":["list"],
					"items":["lst-calc_value", "integer"]}}},
	"struct-index_link":{
		"include":"struct-integer_link",
		"report":{"index_link":[]},
		"either":{
			"index_link":[
				{"optional":{
					"previous":{
						"types":[""]}},
				"forbidden_keys":["next"]},
				{"optional":{
					"next":{
						"types":[""]}},
				"forbidden_keys":["previous"]}]}},
	"struct-link_def":{
		"type":["struct-link_function","struct-link_value","none"],
		"report":{
			"struct":"either 'varid', 'funcid' with 'data' or 'value' should be present",
			"link_function":"either 'varid', 'funcid' with 'data' or 'value' should be present"},
		"conditional":{
			"max length":{
				"presence_key":["varid","funcid"],
				"true":3,
				"false":-1,
				"types":["integer"],
				"default":0},
			"min length":{
				"presence_key":["varid","funcid"],
				"true":3,
				"false":-1,
				"types":["integer"],
				"default":0}},
		"optional":{
				"default":{"types":[""]}}},
	"struct-link_function":{
		"type":"dict",
		"either":{
			"link_function":[
				{"required":{
					"varid":{
						"types":["integer"]}},
				"unused_keys":["funcid","value","data"]},
				{"required":{
					"funcid":{
						"types":["lst-link_funcid"]},
					"data":{
						"types":[
							"list",
							["struct-link_function",""]]}},
				"unused_keys":["value"],
				"forbidden_keys":["varid"]}]},
		"conditional":{
			"default":{
				"presence_key":"funcid",
				"true":3,
				"false":-1,
				"types":[""]}},
		"optional":{
			"regex":{
				"types":["string"]},
			"type":{
				"types":["lst-link_types"]},
			"calc":{
				"types":[
					{"type":"dict",
						"optional":{
							"multiplier":{
								"types":["float"], 
								"default":1},
							"divider":{
								"types":["float"], 
								"default":1}}}]}}},
	"struct-link_value":{
		"type":"dict",
		"required":{
			"value":{"types":[]}},
		"unused_keys":["data","max length","min length","regex","type","calc"],
		"forbidden_keys":["varid","funcid"]}
		}
